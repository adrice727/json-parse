var _this=this;var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};(function(){var isNil=function isNil(input){return!input};var isString=function isString(input){return typeof input==="string"};var isArray=function isArray(input){return Array.isArray(input)};var isObject=function isObject(input){return(typeof input==="undefined"?"undefined":_typeof(input))==="object"&&!isNil(input)};var parseObject=function parseObject(input,fields){Object.keys(input).reduce(function(acc,key){acc[key]=parse(input[key]);return acc},{})};var parseString=function parseString(input){try{var data=JSON.parse(input);return{data:data,isJSON:true}}catch(e){var _data=input;return{data:_data,isJSON:false}}};var parseArray=function parseArray(input){return input.reduce(function(acc,element){return acc.concat(parse(element))},[])};var parse=function parse(input,fields){if(isString(input)){return parseString(input)}if(isArray(input)){return parseArray(input)}if(isObject(input)){return parseObject(input,fields)}return input};var parseWithFields=function parseWithFields(input){return parse(input,true)};var exports={parse:parse,parseWithFields:parseWithFields};if((typeof exports==="undefined"?"undefined":_typeof(exports))==="object"&&!!module){module.exports=exports}else if(typeof define==="function"&&define.amd){define(function(){return exports})}else{_this.simparse=exports}})(this);